{"ast":null,"code":"var _jsxFileName = \"/home/santiago/Trybe/myprojects/sd-09-project-trybewallet/src/component/ExpenseAddForm.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass ExpenseAddForm extends React.Component {\n  createrExpenses() {\n    const {\n      stateProps\n    } = this.props;\n    const expenses = stateProps;\n\n    if (expenses !== undefined) {\n      return expenses.map(({\n        id,\n        value,\n        description,\n        currency,\n        method,\n        tag,\n        exchangeRates\n      }) => {\n        const {\n          name,\n          ask\n        } = exchangeRates[currency];\n        const total = value * Number(ask);\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          name: description,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }\n        }, description), /*#__PURE__*/React.createElement(\"td\", {\n          name: tag,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }\n        }, tag), /*#__PURE__*/React.createElement(\"td\", {\n          name: method,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }\n        }, method), /*#__PURE__*/React.createElement(\"td\", {\n          name: Number(ask).toFixed(2),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }\n        }, `${Number(ask).toFixed(2)}`), /*#__PURE__*/React.createElement(\"td\", {\n          name: name.split('/')[0],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }\n        }, name.split('/')[0]), /*#__PURE__*/React.createElement(\"td\", {\n          name: value,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }\n        }, value), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }\n        }, `${total.toFixed(2)}`), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }\n        }, \"Real\"), /*#__PURE__*/React.createElement(\"button\", {\n          type: \"button\",\n          \"data-testid\": \"edit-btn\",\n          onClick: this.handleClickEdit.bind(this),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }\n        }, \"Editar\"), /*#__PURE__*/React.createElement(\"button\", {\n          type: \"button\",\n          \"data-testid\": \"delete-btn\",\n          onClick: this.handleClickDelete.bind(this),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }\n        }, \"Exluir\"));\n      });\n    }\n  }\n\n  handleClickDelete() {}\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, \"Descri\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, \"Tag\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, \"M\\xE9todo de pagamento\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, \"Valor\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, \"Moeda\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, \"C\\xE2mbio utilizado\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, \"Valor convertido\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, \"Moeda de convers\\xE3o\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, \"Editar/Excluir\")), this.createrExpenses()));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  stateProps: state.wallet.expenses,\n  wallet: state.wallet\n});\n\nexport default connect(mapStateToProps)(ExpenseAddForm);\nExpenseAddForm.propTypes = {\n  stateProps: PropTypes.array\n}.isRequired;","map":{"version":3,"sources":["/home/santiago/Trybe/myprojects/sd-09-project-trybewallet/src/component/ExpenseAddForm.js"],"names":["React","connect","PropTypes","ExpenseAddForm","Component","createrExpenses","stateProps","props","expenses","undefined","map","id","value","description","currency","method","tag","exchangeRates","name","ask","total","Number","toFixed","split","handleClickEdit","bind","handleClickDelete","render","mapStateToProps","state","wallet","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass ExpenseAddForm extends React.Component {\n  createrExpenses() {\n    const { stateProps } = this.props;\n    const expenses = stateProps;\n\n    if (expenses !== undefined) {\n      return expenses\n        .map(({ id,\n          value,\n          description,\n          currency,\n          method,\n          tag,\n          exchangeRates }) => {\n          const { name, ask } = exchangeRates[currency];\n          const total = value * Number(ask);\n          return (\n            <tr key={ id }>\n              <td name={ description }>{ description }</td>\n              <td name={ tag }>{ tag }</td>\n              <td name={ method }>{ method }</td>\n              <td name={ Number(ask).toFixed(2) }>\n                { `${Number(ask).toFixed(2)}` }\n              </td>\n              <td name={ name.split('/')[0] }>{ name.split('/')[0] }</td>\n              <td name={ value }>{ value }</td>\n              <td>{ `${total.toFixed(2)}` }</td>\n              <td>Real</td>\n              <button type=\"button\" data-testid=\"edit-btn\" onClick={ this.handleClickEdit.bind(this) }>Editar</button>\n              <button type=\"button\" data-testid=\"delete-btn\" onClick={ this.handleClickDelete.bind(this) }>Exluir</button>\n            </tr>\n          );\n        });\n    }\n  }\n\n  handleClickDelete() {\n\n  }\n\n  render() {\n    return (\n      <div>\n        <table>\n          <tr>\n            <th>Descrição</th>\n            <th>Tag</th>\n            <th>Método de pagamento</th>\n            <th>Valor</th>\n            <th>Moeda</th>\n            <th>Câmbio utilizado</th>\n            <th>Valor convertido</th>\n            <th>Moeda de conversão</th>\n            <th>Editar/Excluir</th>\n          </tr>\n          { this.createrExpenses() }\n        </table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  stateProps: state.wallet.expenses,\n  wallet: state.wallet,\n});\n\nexport default connect(mapStateToProps)(ExpenseAddForm);\n\nExpenseAddForm.propTypes = {\n  stateProps: PropTypes.array,\n}.isRequired;\n"]},"metadata":{},"sourceType":"module"}