{"ast":null,"code":"var _jsxFileName = \"/home/santiago/Trybe/myprojects/sd-09-project-trybewallet/src/component/formWallet.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { wallet } from '../actions';\nconst methodList = ['Dinheiro', 'Cartão de crédito', 'Cartão de débito'];\nconst tagList = ['Alimentação', 'Lazer', 'Trabalho', 'Transporte', 'Saúde'];\n\nclass FormWallet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: 0,\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n      exchangeRates: ''\n    };\n    this.createOptions = this.createOptions.bind(this);\n    this.createSelect = this.createSelect.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  createOptions() {\n    const {\n      listCurrenciesState\n    } = this.props;\n    return listCurrenciesState.map(element => /*#__PURE__*/React.createElement(\"option\", {\n      key: element,\n      value: element,\n      \"data-testid\": element,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, element));\n  }\n\n  handleChange({\n    target\n  }) {\n    const {\n      name,\n      value\n    } = target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  async handleClick() {\n    const {\n      currencyValuesState: {\n        data\n      },\n      expensesDispatched\n    } = this.props;\n    await this.setState(() => ({\n      exchangeRates: data\n    }));\n    expensesDispatched(this.state);\n    this.setState({\n      id: this.state.id + 1,\n      value: '',\n      description: ''\n    });\n  }\n\n  createSelect(array, name, data, onChange) {\n    return /*#__PURE__*/React.createElement(\"select\", {\n      name: name,\n      id: name,\n      \"data-testid\": data,\n      onChange: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, array.map(element => /*#__PURE__*/React.createElement(\"option\", {\n      key: element,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, element)));\n  }\n\n  createInputs(name, type, data, value) {\n    return /*#__PURE__*/React.createElement(\"input\", {\n      name: name,\n      id: name,\n      value: value,\n      type: type,\n      \"data-testid\": data,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    });\n  }\n\n  render() {\n    const {\n      value,\n      description\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, \"Valor\", this.createInputs('value', 'number', 'value-input', value)), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"currency\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, \"Moeda\", /*#__PURE__*/React.createElement(\"select\", {\n      name: \"currency\",\n      id: \"currency\",\n      \"data-testid\": \" currency-input\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, this.createOptions())), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"method\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, \"M\\xE9todo de pagamento\", this.createSelect(methodList, 'method', 'method-input', this.handleChange)), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, \"Tag\", this.createSelect(tagList, 'tag', 'tag-input', this.handleChange)), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, \"Descri\\xE7\\xE3o\", this.createInputs('description', 'text', 'description-input', description)), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleClick.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, \"Adicionar despesa\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  listCurrenciesState: state.wallet.currencies,\n  currencyValuesState: state.wallet.data\n});\n\nconst mapDispatchToProps = dispatch => ({\n  expensesDispatched: expenses => dispatch(wallet(expenses))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormWallet);\nFormWallet.propTypes = {\n  listCurrenciesState: PropTypes.func.isRequired,\n  expensesDispatched: PropTypes.objectOf.isRequired,\n  currencyValuesState: PropTypes.objectOf.isRequired\n};","map":{"version":3,"sources":["/home/santiago/Trybe/myprojects/sd-09-project-trybewallet/src/component/formWallet.js"],"names":["React","PropTypes","connect","wallet","methodList","tagList","FormWallet","Component","constructor","props","state","id","value","description","currency","method","tag","exchangeRates","createOptions","bind","createSelect","handleChange","listCurrenciesState","map","element","target","name","setState","handleClick","currencyValuesState","data","expensesDispatched","array","onChange","createInputs","type","render","mapStateToProps","currencies","mapDispatchToProps","dispatch","expenses","propTypes","func","isRequired","objectOf"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { wallet } from '../actions';\n\nconst methodList = ['Dinheiro', 'Cartão de crédito', 'Cartão de débito'];\nconst tagList = ['Alimentação', 'Lazer', 'Trabalho', 'Transporte', 'Saúde'];\n\nclass FormWallet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: 0,\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n      exchangeRates: '',\n    };\n\n    this.createOptions = this.createOptions.bind(this);\n    this.createSelect = this.createSelect.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  createOptions() {\n    const { listCurrenciesState } = this.props;\n    return listCurrenciesState.map((element) => (\n      <option\n        key={ element }\n        value={ element }\n        data-testid={ element }\n      >\n        { element }\n      </option>\n    ));\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  async handleClick() {\n    const { currencyValuesState: { data }, expensesDispatched } = this.props;\n\n    await this.setState(() => ({\n      exchangeRates: data,\n    }));\n    expensesDispatched(this.state);\n    this.setState({\n      id: this.state.id + 1,\n      value: '',\n      description: '',\n    });\n  }\n\n  createSelect(array, name, data, onChange) {\n    return (\n      <select\n        name={ name }\n        id={ name }\n        data-testid={ data }\n        onChange={ onChange }\n      >\n        {array.map((element) => (\n          <option key={ element }>{ element }</option>\n        )) }\n      </select>\n    );\n  }\n\n  createInputs(name, type, data, value) {\n    return (<input\n      name={ name }\n      id={ name }\n      value={ value }\n      type={ type }\n      data-testid={ data }\n      onChange={ this.handleChange }\n    />);\n  }\n\n  render() {\n    const { value, description } = this.state;\n    return (\n      <div>\n        <form>\n          <label htmlFor=\"value\">\n            Valor\n            { this.createInputs('value', 'number', 'value-input', value) }\n          </label>\n          <label htmlFor=\"currency\">\n            Moeda\n            <select\n              name=\"currency\"\n              id=\"currency\"\n              data-testid=\" currency-input\"\n              onChange={ this.handleChange }\n            >\n              { this.createOptions() }\n            </select>\n          </label>\n          <label htmlFor=\"method\">\n            Método de pagamento\n            { this.createSelect(methodList, 'method', 'method-input', this.handleChange) }\n          </label>\n          <label htmlFor=\"tag\">\n            Tag\n            { this.createSelect(tagList, 'tag', 'tag-input', this.handleChange) }\n          </label>\n          <label htmlFor=\"description\">\n            Descrição\n            { this.createInputs(\n            'description', 'text', 'description-input', description,\n          ) }\n          </label>\n          <button type=\"button\" onClick={ this.handleClick.bind(this) }>\n            Adicionar despesa\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  listCurrenciesState: state.wallet.currencies,\n  currencyValuesState: state.wallet.data,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  expensesDispatched: (expenses) => dispatch(wallet(expenses)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormWallet);\n\nFormWallet.propTypes = {\n  listCurrenciesState: PropTypes.func.isRequired,\n  expensesDispatched: PropTypes.objectOf.isRequired,\n  currencyValuesState: PropTypes.objectOf.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}