{"ast":null,"code":"var _jsxFileName = \"/home/santiago/Trybe/myprojects/sd-09-project-trybewallet/src/pages/Wallet.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCurrencies, getCurrenciesValues } from '../actions';\nimport FormWallet from '../component/formWallet';\nimport ExpenseAddForm from '../component/ExpenseAddForm';\n\nclass Wallet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalValue: ''\n    };\n    this.handleTotalValue = this.handleTotalValue.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      currencyDispatcher,\n      valoresDispatched\n    } = this.props;\n    currencyDispatcher();\n    valoresDispatched();\n  }\n\n  handleTotalValue() {\n    const {\n      expensesState\n    } = this.props;\n    console.log(expensesState.map(element => console.log(element.name)));\n  }\n\n  render() {\n    this.handleTotalValue();\n    const {\n      emailStore\n    } = this.props;\n    const {\n      totalValue\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, \"Wallet\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      \"data-testid\": \"email-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, emailStore), /*#__PURE__*/React.createElement(\"li\", {\n      \"data-testid\": \"total-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, totalValue), /*#__PURE__*/React.createElement(\"li\", {\n      \"data-testid\": \"header-currency-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, \"BRL\"))), /*#__PURE__*/React.createElement(FormWallet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ExpenseAddForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  currencyDispatcher: () => dispatch(getCurrencies()),\n  valoresDispatched: () => dispatch(getCurrenciesValues())\n});\n\nconst mapStateToProps = state => ({\n  emailStore: state.user.email,\n  expensesState: state.wallet.expenses\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\nWallet.propTypes = {\n  currencyDispatcher: PropTypes.func.isRequired,\n  valoresDispatched: PropTypes.func.isRequired,\n  emailStore: PropTypes.objectOf.isRequired\n};","map":{"version":3,"sources":["/home/santiago/Trybe/myprojects/sd-09-project-trybewallet/src/pages/Wallet.js"],"names":["React","PropTypes","connect","getCurrencies","getCurrenciesValues","FormWallet","ExpenseAddForm","Wallet","Component","constructor","props","state","totalValue","handleTotalValue","bind","componentDidMount","currencyDispatcher","valoresDispatched","expensesState","console","log","map","element","name","render","emailStore","mapDispatchToProps","dispatch","mapStateToProps","user","email","wallet","expenses","propTypes","func","isRequired","objectOf"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,EAAwBC,mBAAxB,QAAmD,YAAnD;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;;AAEA,MAAMC,MAAN,SAAqBP,KAAK,CAACQ,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE;AADD,KAAb;AAIA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA,kBAAF;AAAsBC,MAAAA;AAAtB,QAA4C,KAAKP,KAAvD;AACAM,IAAAA,kBAAkB;AAClBC,IAAAA,iBAAiB;AAClB;;AAEDJ,EAAAA,gBAAgB,GAAG;AACjB,UAAM;AAAEK,MAAAA;AAAF,QAAoB,KAAKR,KAA/B;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYF,aAAa,CAACG,GAAd,CAAmBC,OAAD,IAAaH,OAAO,CAACC,GAAR,CAAYE,OAAO,CAACC,IAApB,CAA/B,CAAZ;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,SAAKX,gBAAL;AACA,UAAM;AAAEY,MAAAA;AAAF,QAAiB,KAAKf,KAA5B;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAiB,KAAKD,KAA5B;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,qBAAY,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCc,UAAhC,CADF,eAEE;AAAI,qBAAY,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCb,UAAhC,CAFF,eAGE;AAAI,qBAAY,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,CAFF,CADF,eASE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,eAUE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CADF;AAcD;;AAvCkC;;AA0CrC,MAAMc,kBAAkB,GAAIC,QAAD,KAAe;AACxCX,EAAAA,kBAAkB,EAAE,MAAMW,QAAQ,CAACxB,aAAa,EAAd,CADM;AAExCc,EAAAA,iBAAiB,EAAE,MAAMU,QAAQ,CAACvB,mBAAmB,EAApB;AAFO,CAAf,CAA3B;;AAKA,MAAMwB,eAAe,GAAIjB,KAAD,KAAY;AAClCc,EAAAA,UAAU,EAAEd,KAAK,CAACkB,IAAN,CAAWC,KADW;AAElCZ,EAAAA,aAAa,EAAEP,KAAK,CAACoB,MAAN,CAAaC;AAFM,CAAZ,CAAxB;;AAKA,eAAe9B,OAAO,CAAC0B,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CnB,MAA7C,CAAf;AAEAA,MAAM,CAAC0B,SAAP,GAAmB;AACjBjB,EAAAA,kBAAkB,EAAEf,SAAS,CAACiC,IAAV,CAAeC,UADlB;AAEjBlB,EAAAA,iBAAiB,EAAEhB,SAAS,CAACiC,IAAV,CAAeC,UAFjB;AAGjBV,EAAAA,UAAU,EAAExB,SAAS,CAACmC,QAAV,CAAmBD;AAHd,CAAnB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCurrencies, getCurrenciesValues } from '../actions';\nimport FormWallet from '../component/formWallet';\nimport ExpenseAddForm from '../component/ExpenseAddForm';\n\nclass Wallet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalValue: '',\n    };\n\n    this.handleTotalValue = this.handleTotalValue.bind(this);\n  }\n\n  componentDidMount() {\n    const { currencyDispatcher, valoresDispatched } = this.props;\n    currencyDispatcher();\n    valoresDispatched();\n  }\n\n  handleTotalValue() {\n    const { expensesState } = this.props;\n    console.log(expensesState.map((element) => console.log(element.name)));\n  }\n\n  render() {\n    this.handleTotalValue();\n    const { emailStore } = this.props;\n    const { totalValue } = this.state;\n    return (\n      <main>\n        <header>\n          <h1>Wallet</h1>\n          <ul>\n            <li data-testid=\"email-field\">{ emailStore }</li>\n            <li data-testid=\"total-field\">{ totalValue }</li>\n            <li data-testid=\"header-currency-field\">BRL</li>\n          </ul>\n        </header>\n        <FormWallet />\n        <ExpenseAddForm />\n      </main>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  currencyDispatcher: () => dispatch(getCurrencies()),\n  valoresDispatched: () => dispatch(getCurrenciesValues()),\n});\n\nconst mapStateToProps = (state) => ({\n  emailStore: state.user.email,\n  expensesState: state.wallet.expenses,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\n\nWallet.propTypes = {\n  currencyDispatcher: PropTypes.func.isRequired,\n  valoresDispatched: PropTypes.func.isRequired,\n  emailStore: PropTypes.objectOf.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}