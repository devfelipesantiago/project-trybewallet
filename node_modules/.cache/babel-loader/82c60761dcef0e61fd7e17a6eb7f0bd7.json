{"ast":null,"code":"var _jsxFileName = \"/home/santiago/Trybe/myprojects/sd-09-project-trybewallet/src/component/ExpenseAddForm.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { updateExpenses } from '../actions';\n\nclass ExpenseAddForm extends React.Component {\n  createrExpenses() {\n    const {\n      stateProps\n    } = this.props;\n    const expenses = stateProps;\n\n    if (expenses !== undefined) {\n      return expenses.map(({\n        id,\n        value,\n        description,\n        currency,\n        method,\n        tag,\n        exchangeRates\n      }) => {\n        const {\n          name,\n          ask\n        } = exchangeRates[currency];\n        const total = value * Number(ask);\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: id,\n          id: id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          name: description,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 15\n          }\n        }, description), /*#__PURE__*/React.createElement(\"td\", {\n          name: tag,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 15\n          }\n        }, tag), /*#__PURE__*/React.createElement(\"td\", {\n          name: method,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }\n        }, method), /*#__PURE__*/React.createElement(\"td\", {\n          name: Number(ask).toFixed(2),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }\n        }, `${Number(ask).toFixed(2)}`), /*#__PURE__*/React.createElement(\"td\", {\n          name: name.split('/')[0],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }\n        }, name.split('/')[0]), /*#__PURE__*/React.createElement(\"td\", {\n          name: value,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }\n        }, value), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }\n        }, `${total.toFixed(2)}`), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }\n        }, \"Real\"), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          id: id,\n          type: \"button\",\n          \"data-testid\": \"edit-btn\" // onClick={ this.handleClickEdit.bind(this) }\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }\n        }, \"Editar\")), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          id: id,\n          type: \"button\",\n          \"data-testid\": \"delete-btn\",\n          onClick: this.handleClickDelete.bind(this),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }\n        }, \"Exluir\")));\n      });\n    }\n  }\n\n  deleteExpenses(array, id) {\n    array.splice(0, id);\n    return array;\n  }\n\n  handleClickDelete({\n    target: {\n      id\n    }\n  }) {\n    const {\n      stateProps,\n      expensesUpdateDispatched\n    } = this.props;\n    const expenses = stateProps;\n    const ids = Number(id);\n    console.log(ids);\n    this.deleteExpenses(expenses, ids);\n    console.log(expenses);\n    expensesUpdateDispatched(expenses);\n  }\n\n  handleClickEdit() {\n    console.log('edit');\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, \"Descri\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, \"Tag\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, \"M\\xE9todo de pagamento\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, \"Valor\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, \"Moeda\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, \"C\\xE2mbio utilizado\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, \"Valor convertido\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, \"Moeda de convers\\xE3o\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, \"Editar/Excluir\")), this.createrExpenses()));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  stateProps: state.wallet.expenses,\n  wallet: state.wallet\n});\n\nconst mapDispatchToProps = dispatch => ({\n  expensesUpdateDispatched: expenses => dispatch(updateExpenses(expenses))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenseAddForm);\nExpenseAddForm.propTypes = {\n  stateProps: PropTypes.array,\n  expensesDispatched: PropTypes.func\n}.isRequired;","map":{"version":3,"sources":["/home/santiago/Trybe/myprojects/sd-09-project-trybewallet/src/component/ExpenseAddForm.js"],"names":["React","connect","PropTypes","updateExpenses","ExpenseAddForm","Component","createrExpenses","stateProps","props","expenses","undefined","map","id","value","description","currency","method","tag","exchangeRates","name","ask","total","Number","toFixed","split","handleClickDelete","bind","deleteExpenses","array","splice","target","expensesUpdateDispatched","ids","console","log","handleClickEdit","render","mapStateToProps","state","wallet","mapDispatchToProps","dispatch","propTypes","expensesDispatched","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { updateExpenses } from '../actions';\n\nclass ExpenseAddForm extends React.Component {\n  createrExpenses() {\n    const { stateProps } = this.props;\n    const expenses = stateProps;\n\n    if (expenses !== undefined) {\n      return expenses\n        .map(({ id, value, description, currency, method, tag, exchangeRates }) => {\n          const { name, ask } = exchangeRates[currency];\n          const total = value * Number(ask);\n          return (\n            <tr key={ id } id={ id }>\n              <td name={ description }>{ description }</td>\n              <td name={ tag }>{ tag }</td>\n              <td name={ method }>{ method }</td>\n              <td name={ Number(ask).toFixed(2) }>\n                { `${Number(ask).toFixed(2)}` }\n              </td>\n              <td name={ name.split('/')[0] }>{ name.split('/')[0] }</td>\n              <td name={ value }>{ value }</td>\n              <td>{ `${total.toFixed(2)}` }</td>\n              <td>Real</td>\n              <td>\n                <button\n                  id={ id }\n                  type=\"button\"\n                  data-testid=\"edit-btn\"\n                // onClick={ this.handleClickEdit.bind(this) }\n                >\n                  Editar\n                </button>\n              </td>\n              <td>\n                <button\n                  id={ id }\n                  type=\"button\"\n                  data-testid=\"delete-btn\"\n                  onClick={ this.handleClickDelete.bind(this) }\n                >\n                  Exluir\n                </button>\n              </td>\n            </tr>\n          );\n        });\n    }\n  }\n\n  deleteExpenses(array, id) {\n    array.splice(0, id);\n    return array;\n  }\n\n  handleClickDelete({ target: { id } }) {\n    const { stateProps, expensesUpdateDispatched } = this.props;\n    const expenses = stateProps;\n    const ids = Number(id);\n    console.log(ids);\n    this.deleteExpenses(expenses, ids);\n    console.log(expenses);\n    expensesUpdateDispatched(expenses);\n  }\n\n  handleClickEdit() {\n    console.log('edit');\n  }\n\n  render() {\n    return (\n      <div>\n        <table>\n          <tr>\n            <th>Descrição</th>\n            <th>Tag</th>\n            <th>Método de pagamento</th>\n            <th>Valor</th>\n            <th>Moeda</th>\n            <th>Câmbio utilizado</th>\n            <th>Valor convertido</th>\n            <th>Moeda de conversão</th>\n            <th>Editar/Excluir</th>\n          </tr>\n          { this.createrExpenses() }\n        </table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  stateProps: state.wallet.expenses,\n  wallet: state.wallet,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  expensesUpdateDispatched: (expenses) => dispatch(updateExpenses(expenses)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenseAddForm);\n\nExpenseAddForm.propTypes = {\n  stateProps: PropTypes.array,\n  expensesDispatched: PropTypes.func,\n}.isRequired;\n"]},"metadata":{},"sourceType":"module"}