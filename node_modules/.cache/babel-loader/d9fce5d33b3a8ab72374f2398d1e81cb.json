{"ast":null,"code":"var _jsxFileName = \"/home/santiago/Trybe/myprojects/sd-09-project-trybewallet/src/pages/Login.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { user } from '../actions';\nimport { Link } from 'react-router-dom';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      isDisabled: true\n    };\n  }\n\n  handleChange({\n    target\n  }) {\n    const {\n      name,\n      value\n    } = target;\n    this.setState({\n      [name]: value\n    }, () => this.validateUser());\n  }\n\n  validateUser() {\n    const {\n      email,\n      password\n    } = this.state;\n    const emailRegex = new RegExp(/^[\\w.]+@[a-z]+.\\w{2,3}$/g);\n    const passwordRegex = new RegExp(/[\\w\\D]{6}/g);\n\n    if (emailRegex.test(email) && passwordRegex.test(password)) {\n      this.setState({\n        isDisabled: false\n      });\n    } else {\n      this.setState({\n        isDisabled: true\n      });\n    }\n  }\n\n  handleClick() {\n    const {\n      emailDispatcher\n    } = this.props;\n    const {\n      email\n    } = this.state;\n    emailDispatcher(email);\n  }\n\n  render() {\n    const {\n      email,\n      password,\n      isDisabled\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"login-email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, \"Email\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      value: email,\n      id: \"login-email\",\n      \"data-testid\": \"email-input\",\n      onChange: this.handleChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"login-password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, \"Password\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      id: \"login-password\",\n      \"data-testid\": \"password-input\",\n      onChange: this.handleChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Link, {\n      to: \"/carteira\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      disabled: isDisabled,\n      onClick: this.handleClick.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, \"ENTRAR\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispach => ({\n  emailDispatcher: email => dispach(user(email))\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\nLogin.propTypes = {\n  emailDispatcher: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/home/santiago/Trybe/myprojects/sd-09-project-trybewallet/src/pages/Login.js"],"names":["React","connect","PropTypes","user","Link","Login","Component","constructor","props","state","email","password","isDisabled","handleChange","target","name","value","setState","validateUser","emailRegex","RegExp","passwordRegex","test","handleClick","emailDispatcher","render","bind","mapDispatchToProps","dispach","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { user } from '../actions';\nimport { Link } from 'react-router-dom';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      isDisabled: true,\n    };\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({ [name]: value }, () => this.validateUser());\n  }\n\n  validateUser() {\n    const { email, password } = this.state;\n    const emailRegex = new RegExp(/^[\\w.]+@[a-z]+.\\w{2,3}$/g);\n    const passwordRegex = new RegExp(/[\\w\\D]{6}/g);\n    if (emailRegex.test(email) && passwordRegex.test(password)) {\n      this.setState({ isDisabled: false });\n    } else {\n      this.setState({ isDisabled: true });\n    }\n  }\n\n  handleClick() {\n    const { emailDispatcher } = this.props;\n    const { email } = this.state;\n    emailDispatcher(email);\n  }\n\n  render() {\n    const { email, password, isDisabled } = this.state;\n    return (\n      <form>\n        <label htmlFor=\"login-email\">\n          Email\n          <input\n            type=\"text\"\n            name=\"email\"\n            value={ email }\n            id=\"login-email\"\n            data-testid=\"email-input\"\n            onChange={ this.handleChange.bind(this) }\n          />\n        </label>\n        <label htmlFor=\"login-password\">\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={ password }\n            id=\"login-password\"\n            data-testid=\"password-input\"\n            onChange={ this.handleChange.bind(this) }\n          />\n        </label>\n        <Link to=\"/carteira\">\n          <button\n            type=\"button\"\n            disabled={ isDisabled }\n            onClick={ this.handleClick.bind(this) }\n          >\n            ENTRAR\n          </button>\n        </Link>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispach) => ({\n  emailDispatcher: (email) => dispach(user(email)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n\nLogin.propTypes = {\n  emailDispatcher: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}