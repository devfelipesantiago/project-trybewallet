{"ast":null,"code":"// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\nimport { REQUEST_CURRENCY, INPUT_WALLET, DELETE_EXPENSES, UPDATE_EXPENSES } from '../actions';\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  updateExpenses: ''\n};\n\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case REQUEST_CURRENCY:\n      return { ...state,\n        currencies: action.response\n      };\n\n    case INPUT_WALLET:\n      return { ...state,\n        expenses: [...state.expenses, action.expenses]\n      };\n\n    case DELETE_EXPENSES:\n      return { ...state,\n        expenses: action.expenses\n      };\n\n    case UPDATE_EXPENSES:\n      return { ...state,\n        updateExpenses: action.updateExpenses\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default wallet;","map":{"version":3,"sources":["/home/santiago/Trybe/myprojects/sd-09-project-trybewallet/src/reducers/wallet.js"],"names":["REQUEST_CURRENCY","INPUT_WALLET","DELETE_EXPENSES","UPDATE_EXPENSES","INITIAL_STATE","currencies","expenses","updateExpenses","wallet","state","action","type","response"],"mappings":"AAAA;AACA,SACEA,gBADF,EACoBC,YADpB,EACkCC,eADlC,EACmDC,eADnD,QAC0E,YAD1E;AAGA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,UAAU,EAAE,EADQ;AAEpBC,EAAAA,QAAQ,EAAE,EAFU;AAGpBC,EAAAA,cAAc,EAAE;AAHI,CAAtB;;AAMA,MAAMC,MAAM,GAAG,CAACC,KAAK,GAAGL,aAAT,EAAwBM,MAAxB,KAAmC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKX,gBAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELJ,QAAAA,UAAU,EAAEK,MAAM,CAACE;AAFd,OAAP;;AAIF,SAAKX,YAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELH,QAAAA,QAAQ,EAAE,CAAC,GAAGG,KAAK,CAACH,QAAV,EAAoBI,MAAM,CAACJ,QAA3B;AAFL,OAAP;;AAIF,SAAKJ,eAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELH,QAAAA,QAAQ,EAAEI,MAAM,CAACJ;AAFZ,OAAP;;AAIF,SAAKH,eAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELF,QAAAA,cAAc,EAAEG,MAAM,CAACH;AAFlB,OAAP;;AAIF;AACE,aAAOE,KAAP;AAtBF;AAwBD,CAzBD;;AA0BA,eAAeD,MAAf","sourcesContent":["// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\nimport {\n  REQUEST_CURRENCY, INPUT_WALLET, DELETE_EXPENSES, UPDATE_EXPENSES } from '../actions';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  updateExpenses: '',\n};\n\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case REQUEST_CURRENCY:\n    return {\n      ...state,\n      currencies: action.response,\n    };\n  case INPUT_WALLET:\n    return {\n      ...state,\n      expenses: [...state.expenses, action.expenses],\n    };\n  case DELETE_EXPENSES:\n    return {\n      ...state,\n      expenses: action.expenses,\n    };\n  case UPDATE_EXPENSES:\n    return {\n      ...state,\n      updateExpenses: action.updateExpenses,\n    };\n  default:\n    return state;\n  }\n};\nexport default wallet;\n"]},"metadata":{},"sourceType":"module"}