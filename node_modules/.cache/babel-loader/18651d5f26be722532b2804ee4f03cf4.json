{"ast":null,"code":"var _jsxFileName = \"/home/santiago/Trybe/myprojects/sd-09-project-trybewallet/src/component/formWallet.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { wallet } from '../actions';\nimport currencyApi from '../services/requestApi';\nconst methodList = ['Dinheiro', 'Cartão de crédito', 'Cartão de débito'];\nconst tagList = ['Alimentação', 'Lazer', 'Trabalho', 'Transporte', 'Saúde'];\n\nclass FormWallet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: 0,\n      value: 0,\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n      exchangeRates: ''\n    };\n    this.createOptions = this.createOptions.bind(this);\n    this.createSelect = this.createSelect.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  createOptions() {\n    const {\n      listCurrenciesState\n    } = this.props;\n    return listCurrenciesState.map(element => /*#__PURE__*/React.createElement(\"option\", {\n      key: element,\n      value: element,\n      \"data-testid\": element,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, element));\n  }\n\n  handleChange({\n    target\n  }) {\n    const {\n      name,\n      value\n    } = target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  async handleClick() {\n    const {\n      expensesDispatched\n    } = this.props;\n    const data = await currencyApi();\n    await this.setState(() => ({\n      exchangeRates: data\n    }));\n    expensesDispatched(this.state);\n    const {\n      id\n    } = this.state;\n    this.setState({\n      id: id + 1,\n      value: '',\n      description: ''\n    }); // currencyApi();\n  }\n\n  createSelect(array, name, data, onChange) {\n    return /*#__PURE__*/React.createElement(\"select\", {\n      name: name,\n      id: name,\n      \"data-testid\": data,\n      onChange: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, array.map(element => /*#__PURE__*/React.createElement(\"option\", {\n      key: element,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, element)));\n  }\n\n  createInputs(name, type, data, value) {\n    return /*#__PURE__*/React.createElement(\"input\", {\n      name: name,\n      id: name,\n      value: value,\n      type: type,\n      \"data-testid\": data,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    });\n  }\n\n  render() {\n    const {\n      value,\n      description\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, \"Valor:\", this.createInputs('value', 'number', 'value-input', value)), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, \"Descri\\xE7\\xE3o:\", this.createInputs('description', 'text', 'description-input', description)), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"currency\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, \"Moeda:\", /*#__PURE__*/React.createElement(\"select\", {\n      name: \"currency\",\n      id: \"currency\",\n      \"data-testid\": \" currency-input\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, this.createOptions())), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"method\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }, \"M\\xE9todo de pagamento:\", this.createSelect(methodList, 'method', 'method-input', this.handleChange)), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, \"Tag:\", this.createSelect(tagList, 'tag', 'tag-input', this.handleChange)), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleClick.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, \"Adicionar despesa:\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  listCurrenciesState: state.wallet.currencies\n});\n\nconst mapDispatchToProps = dispatch => ({\n  expensesDispatched: expenses => dispatch(wallet(expenses))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormWallet);\nFormWallet.propTypes = {\n  listCurrenciesState: PropTypes.func.isRequired,\n  expensesDispatched: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/home/santiago/Trybe/myprojects/sd-09-project-trybewallet/src/component/formWallet.js"],"names":["React","PropTypes","connect","wallet","currencyApi","methodList","tagList","FormWallet","Component","constructor","props","state","id","value","description","currency","method","tag","exchangeRates","createOptions","bind","createSelect","handleChange","listCurrenciesState","map","element","target","name","setState","handleClick","expensesDispatched","data","array","onChange","createInputs","type","render","mapStateToProps","currencies","mapDispatchToProps","dispatch","expenses","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { wallet } from '../actions';\nimport currencyApi from '../services/requestApi';\n\nconst methodList = ['Dinheiro', 'Cartão de crédito', 'Cartão de débito'];\nconst tagList = ['Alimentação', 'Lazer', 'Trabalho', 'Transporte', 'Saúde'];\n\nclass FormWallet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: 0,\n      value: 0,\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n      exchangeRates: '',\n    };\n\n    this.createOptions = this.createOptions.bind(this);\n    this.createSelect = this.createSelect.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  createOptions() {\n    const { listCurrenciesState } = this.props;\n    return listCurrenciesState.map((element) => (\n      <option\n        key={ element }\n        value={ element }\n        data-testid={ element }\n      >\n        { element }\n      </option>\n    ));\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  async handleClick() {\n    const { expensesDispatched } = this.props;\n    const data = await currencyApi();\n    await this.setState(() => ({\n      exchangeRates: data,\n    }));\n    expensesDispatched(this.state);\n    const { id } = this.state;\n    this.setState({\n      id: id + 1,\n      value: '',\n      description: '',\n    });\n    // currencyApi();\n  }\n\n  createSelect(array, name, data, onChange) {\n    return (\n      <select\n        name={ name }\n        id={ name }\n        data-testid={ data }\n        onChange={ onChange }\n      >\n        {array.map((element) => (\n          <option key={ element }>{ element }</option>\n        )) }\n      </select>\n    );\n  }\n\n  createInputs(name, type, data, value) {\n    return (<input\n      name={ name }\n      id={ name }\n      value={ value }\n      type={ type }\n      data-testid={ data }\n      onChange={ this.handleChange }\n    />);\n  }\n\n  render() {\n    const { value, description } = this.state;\n    return (\n      <div>\n        <form>\n          <label htmlFor=\"value\">\n            Valor:\n            { this.createInputs('value', 'number', 'value-input', value) }\n          </label>\n          <label htmlFor=\"description\">\n            Descrição:\n            { this.createInputs('description', 'text', 'description-input', description) }\n          </label>\n          <label htmlFor=\"currency\">\n            Moeda:\n            <select\n              name=\"currency\"\n              id=\"currency\"\n              data-testid=\" currency-input\"\n              onChange={ this.handleChange }\n            >\n              { this.createOptions() }\n            </select>\n          </label>\n          <label htmlFor=\"method\">\n            Método de pagamento:\n            { this.createSelect(methodList, 'method', 'method-input', this.handleChange) }\n          </label>\n          <label htmlFor=\"tag\">\n            Tag:\n            { this.createSelect(tagList, 'tag', 'tag-input', this.handleChange) }\n          </label>\n          <button type=\"button\" onClick={ this.handleClick.bind(this) }>\n            Adicionar despesa:\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  listCurrenciesState: state.wallet.currencies,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  expensesDispatched: (expenses) => dispatch(wallet(expenses)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormWallet);\n\nFormWallet.propTypes = {\n  listCurrenciesState: PropTypes.func.isRequired,\n  expensesDispatched: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}