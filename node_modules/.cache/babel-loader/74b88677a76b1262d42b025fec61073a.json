{"ast":null,"code":"var _jsxFileName = \"/home/santiago/Trybe/myprojects/sd-09-project-trybewallet/src/component/formWallet.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { wallet } from '../actions';\n\nclass FormWallet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: 0,\n      value: '',\n      description: '',\n      currency: '',\n      method: '',\n      tag: '',\n      exchangeRates: ''\n    };\n    this.createOptions = this.createOptions.bind(this);\n    this.createSelect = this.createSelect.bind(this);\n    const methodList = ['', 'Dinheiro', 'Cartão de crédito', 'Cartão de débito'];\n    const tagList = ['', 'Alimentação', 'Lazer', 'Trabalho', 'Transporte', 'Saúde'];\n  }\n\n  createOptions() {\n    const {\n      listCurrenciesState\n    } = this.props;\n    return listCurrenciesState.map(element => /*#__PURE__*/React.createElement(\"option\", {\n      key: element,\n      value: element,\n      \"data-testid\": element,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, element));\n  }\n\n  handleChange({\n    target\n  }) {\n    const {\n      name,\n      value\n    } = target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleClick() {\n    const {\n      currencyValuesState: {\n        data\n      }\n    } = this.props;\n    const {\n      id\n    } = this.state;\n    this.setState({\n      id: id + 1,\n      exchangeRates: data\n    });\n    console.log(this.state);\n  }\n\n  createSelect(array) {\n    return array.map(element => /*#__PURE__*/React.createElement(\"option\", {\n      key: element,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, element));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, \"Valor\", /*#__PURE__*/React.createElement(\"input\", {\n      name: \"value\",\n      id: \"value\",\n      type: \"text\",\n      \"data-testid\": \"value-input\",\n      onChange: this.handleChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"currency\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, \"Moeda\", /*#__PURE__*/React.createElement(\"select\", {\n      name: \"currency\",\n      id: \"currency\",\n      \"data-testid\": \" currency-input\",\n      onChange: this.handleChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, this.createOptions())), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"method\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, \"M\\xE9todo de pagamento\", /*#__PURE__*/React.createElement(\"select\", {\n      name: \"method\",\n      id: \"method\",\n      \"data-testid\": \"method-input\",\n      onChange: this.handleChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, this.createSelect(methodList))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, \"Tag\", /*#__PURE__*/React.createElement(\"select\", {\n      name: \"tag\",\n      id: \"tag\",\n      \"data-testid\": \"tag-input\",\n      onChange: this.handleChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, \"Alimenta\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, \"Lazer\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, \"Trabalho\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }, \"Transporte\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, \"Sa\\xFAde\"))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, \"Descri\\xE7\\xE3o\", /*#__PURE__*/React.createElement(\"input\", {\n      name: \"description\",\n      id: \"description\",\n      type: \"text\",\n      \"data-testid\": \"description-input\",\n      onChange: this.handleChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleClick.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, \"Adicionar despesa\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  listCurrenciesState: state.wallet.currencies,\n  currencyValuesState: state.wallet.data\n});\n\nconst mapDispatchToProps = dispatch => ({\n  expensesDispatched: () => dispatch(wallet)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormWallet);\nFormWallet.propTypes = {\n  listCurrenciesState: PropTypes.func.isRequired,\n  expensesDispatched: PropTypes.objectOf.isRequired,\n  currencyValuesState: PropTypes.objectOf.isRequired\n};","map":{"version":3,"sources":["/home/santiago/Trybe/myprojects/sd-09-project-trybewallet/src/component/formWallet.js"],"names":["React","PropTypes","connect","wallet","FormWallet","Component","constructor","props","state","id","value","description","currency","method","tag","exchangeRates","createOptions","bind","createSelect","methodList","tagList","listCurrenciesState","map","element","handleChange","target","name","setState","handleClick","currencyValuesState","data","console","log","array","render","mapStateToProps","currencies","mapDispatchToProps","dispatch","expensesDispatched","propTypes","func","isRequired","objectOf"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { wallet } from '../actions';\n\nclass FormWallet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: 0,\n      value: '',\n      description: '',\n      currency: '',\n      method: '',\n      tag: '',\n      exchangeRates: '',\n    };\n\n    this.createOptions = this.createOptions.bind(this);\n    this.createSelect = this.createSelect.bind(this);\n\n    const methodList = ['', 'Dinheiro', 'Cartão de crédito', 'Cartão de débito'];\n    const tagList = ['', 'Alimentação', 'Lazer', 'Trabalho', 'Transporte', 'Saúde'];\n  }\n\n  createOptions() {\n    const { listCurrenciesState } = this.props;\n    return listCurrenciesState.map((element) => (\n      <option\n        key={ element }\n        value={ element }\n        data-testid={ element }\n      >\n        { element }\n      </option>\n    ));\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  handleClick() {\n    const { currencyValuesState: { data } } = this.props;\n    const { id } = this.state;\n    this.setState({\n      id: id + 1,\n      exchangeRates: data,\n    });\n    console.log(this.state);\n  }\n\n  createSelect(array) {\n    return array.map((element) => (\n      <option key={ element }>{ element }</option>\n    ));\n  }\n\n  render() {\n    return (\n      <div>\n        <form>\n          <label htmlFor=\"value\">\n            Valor\n            <input name=\"value\" id=\"value\" type=\"text\" data-testid=\"value-input\" onChange={ this.handleChange.bind(this) } />\n          </label>\n          <label htmlFor=\"currency\">\n            Moeda\n            <select name=\"currency\" id=\"currency\" data-testid=\" currency-input\" onChange={ this.handleChange.bind(this) }>\n              { this.createOptions() }\n            </select>\n          </label>\n          <label htmlFor=\"method\">\n            Método de pagamento\n            <select name=\"method\" id=\"method\" data-testid=\"method-input\" onChange={ this.handleChange.bind(this) }>\n              {this.createSelect(methodList)}\n            </select>\n          </label>\n          <label htmlFor=\"tag\">\n            Tag\n            <select name=\"tag\" id=\"tag\" data-testid=\"tag-input\" onChange={ this.handleChange.bind(this) }>\n              <option>Alimentação</option>\n              <option>Lazer</option>\n              <option>Trabalho</option>\n              <option>Transporte</option>\n              <option>Saúde</option>\n            </select>\n          </label>\n          <label htmlFor=\"description\">\n            Descrição\n            <input\n              name=\"description\"\n              id=\"description\"\n              type=\"text\"\n              data-testid=\"description-input\"\n              onChange={ this.handleChange.bind(this) }\n            />\n          </label>\n          <button type=\"button\" onClick={ this.handleClick.bind(this) }>\n            Adicionar despesa\n            {/* Um botão com o texto 'Adicionar despesa' que salva as informações da despesa no estado global e atualiza a soma de despesas no header */ }\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  listCurrenciesState: state.wallet.currencies,\n  currencyValuesState: state.wallet.data,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  expensesDispatched: () => dispatch(wallet),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormWallet);\n\nFormWallet.propTypes = {\n  listCurrenciesState: PropTypes.func.isRequired,\n  expensesDispatched: PropTypes.objectOf.isRequired,\n  currencyValuesState: PropTypes.objectOf.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}