{"ast":null,"code":"var _jsxFileName = \"/home/santiago/Trybe/myprojects/sd-09-project-trybewallet/src/component/ExpenseAddForm.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { updateExpenses } from '../actions';\n\nclass ExpenseAddForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0,\n      description: ''\n    };\n  }\n\n  createrExpenses() {\n    const {\n      stateProps\n    } = this.props;\n    const expenses = stateProps;\n\n    if (expenses !== undefined) {\n      return expenses.map(({\n        id,\n        value,\n        description,\n        currency,\n        method,\n        tag,\n        exchangeRates\n      }) => {\n        const {\n          name,\n          ask\n        } = exchangeRates[currency];\n        const total = value * Number(ask);\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: id,\n          id: id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          name: description,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }\n        }, description), /*#__PURE__*/React.createElement(\"td\", {\n          name: tag,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }\n        }, tag), /*#__PURE__*/React.createElement(\"td\", {\n          name: method,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }\n        }, method), /*#__PURE__*/React.createElement(\"td\", {\n          name: Number(ask).toFixed(2),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }\n        }, `${Number(ask).toFixed(2)}`), /*#__PURE__*/React.createElement(\"td\", {\n          name: name.split('/')[0],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }\n        }, name.split('/')[0]), /*#__PURE__*/React.createElement(\"td\", {\n          name: value,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }\n        }, value), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }\n        }, `${total.toFixed(2)}`), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }\n        }, \"Real\"), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          id: id,\n          type: \"button\",\n          \"data-testid\": \"edit-btn\",\n          onClick: this.handleClickEdit.bind(this),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }\n        }, \"Editar\")), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          id: id,\n          type: \"button\",\n          \"data-testid\": \"delete-btn\",\n          onClick: this.handleClickDelete.bind(this),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }\n        }, \"Exluir\")));\n      });\n    }\n  }\n\n  handleClickDelete({\n    target: {\n      id\n    }\n  }) {\n    const {\n      stateProps,\n      expensesUpdateDispatched\n    } = this.props;\n    const ids = Number(id);\n    const newExpenses = stateProps.map(e => e).filter(expense => expense.id !== ids);\n    expensesUpdateDispatched(newExpenses);\n  }\n\n  handleClickEdit() {\n    this.handleEditExpense();\n  }\n\n  handleEditExpense() {\n    const {\n      value,\n      description\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, \"Valor:\", this.createInputs('value', 'number', 'value-input', value)), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, \"Descri\\xE7\\xE3o:\", this.createInputs('description', 'text', 'description-input', description)), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"currency\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, \"Moeda:\", /*#__PURE__*/React.createElement(\"select\", {\n      name: \"currency\",\n      id: \"currency\",\n      \"data-testid\": \" currency-input\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, this.createOptions())), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"method\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, \"M\\xE9todo de pagamento:\", this.createSelect(methodList, 'method', 'method-input', this.handleChange)), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, \"Tag:\", this.createSelect(tagList, 'tag', 'tag-input', this.handleChange)), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, \"Editar despesa\")));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, \"Descri\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, \"Tag\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, \"M\\xE9todo de pagamento\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, \"Valor\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, \"Moeda\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, \"C\\xE2mbio utilizado\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, \"Valor convertido\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, \"Moeda de convers\\xE3o\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, \"Editar/Excluir\")), this.createrExpenses()));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  stateProps: state.wallet.expenses,\n  wallet: state.wallet\n});\n\nconst mapDispatchToProps = dispatch => ({\n  expensesUpdateDispatched: expenses => dispatch(updateExpenses(expenses))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenseAddForm);\nExpenseAddForm.propTypes = {\n  stateProps: PropTypes.array,\n  expensesDispatched: PropTypes.func\n}.isRequired;","map":{"version":3,"sources":["/home/santiago/Trybe/myprojects/sd-09-project-trybewallet/src/component/ExpenseAddForm.js"],"names":["React","connect","PropTypes","updateExpenses","ExpenseAddForm","Component","constructor","props","state","value","description","createrExpenses","stateProps","expenses","undefined","map","id","currency","method","tag","exchangeRates","name","ask","total","Number","toFixed","split","handleClickEdit","bind","handleClickDelete","target","expensesUpdateDispatched","ids","newExpenses","e","filter","expense","handleEditExpense","createInputs","handleChange","createOptions","createSelect","methodList","tagList","render","mapStateToProps","wallet","mapDispatchToProps","dispatch","propTypes","array","expensesDispatched","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,cAAT,QAA+B,YAA/B;;AAEA,MAAMC,cAAN,SAA6BJ,KAAK,CAACK,SAAnC,CAA6C;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,CADI;AAEXC,MAAAA,WAAW,EAAE;AAFF,KAAb;AAID;;AAEDC,EAAAA,eAAe,GAAG;AAChB,UAAM;AAAEC,MAAAA;AAAF,QAAiB,KAAKL,KAA5B;AACA,UAAMM,QAAQ,GAAGD,UAAjB;;AAEA,QAAIC,QAAQ,KAAKC,SAAjB,EAA4B;AAC1B,aAAOD,QAAQ,CACZE,GADI,CACA,CAAC;AAAEC,QAAAA,EAAF;AAAMP,QAAAA,KAAN;AAAaC,QAAAA,WAAb;AAA0BO,QAAAA,QAA1B;AAAoCC,QAAAA,MAApC;AAA4CC,QAAAA,GAA5C;AAAiDC,QAAAA;AAAjD,OAAD,KAAsE;AACzE,cAAM;AAAEC,UAAAA,IAAF;AAAQC,UAAAA;AAAR,YAAgBF,aAAa,CAACH,QAAD,CAAnC;AACA,cAAMM,KAAK,GAAGd,KAAK,GAAGe,MAAM,CAACF,GAAD,CAA5B;AACA,4BACE;AAAI,UAAA,GAAG,EAAGN,EAAV;AAAe,UAAA,EAAE,EAAGA,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAI,UAAA,IAAI,EAAGN,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA2BA,WAA3B,CADF,eAEE;AAAI,UAAA,IAAI,EAAGS,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAmBA,GAAnB,CAFF,eAGE;AAAI,UAAA,IAAI,EAAGD,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsBA,MAAtB,CAHF,eAIE;AAAI,UAAA,IAAI,EAAGM,MAAM,CAACF,GAAD,CAAN,CAAYG,OAAZ,CAAoB,CAApB,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,GAAED,MAAM,CAACF,GAAD,CAAN,CAAYG,OAAZ,CAAoB,CAApB,CAAuB,EAD9B,CAJF,eAOE;AAAI,UAAA,IAAI,EAAGJ,IAAI,CAACK,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAkCL,IAAI,CAACK,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAlC,CAPF,eAQE;AAAI,UAAA,IAAI,EAAGjB,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqBA,KAArB,CARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAO,GAAEc,KAAK,CAACE,OAAN,CAAc,CAAd,CAAiB,EAA1B,CATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AACE,UAAA,EAAE,EAAGT,EADP;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,yBAAY,UAHd;AAIE,UAAA,OAAO,EAAG,KAAKW,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CAXF,eAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AACE,UAAA,EAAE,EAAGZ,EADP;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,yBAAY,YAHd;AAIE,UAAA,OAAO,EAAG,KAAKa,iBAAL,CAAuBD,IAAvB,CAA4B,IAA5B,CAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CArBF,CADF;AAkCD,OAtCI,CAAP;AAuCD;AACF;;AAEDC,EAAAA,iBAAiB,CAAC;AAAEC,IAAAA,MAAM,EAAE;AAAEd,MAAAA;AAAF;AAAV,GAAD,EAAqB;AACpC,UAAM;AAAEJ,MAAAA,UAAF;AAAcmB,MAAAA;AAAd,QAA2C,KAAKxB,KAAtD;AACA,UAAMyB,GAAG,GAAGR,MAAM,CAACR,EAAD,CAAlB;AACA,UAAMiB,WAAW,GAAGrB,UAAU,CAACG,GAAX,CAAgBmB,CAAD,IAAOA,CAAtB,EAAyBC,MAAzB,CAAiCC,OAAD,IAAaA,OAAO,CAACpB,EAAR,KAAegB,GAA5D,CAApB;AACAD,IAAAA,wBAAwB,CAACE,WAAD,CAAxB;AACD;;AAEDN,EAAAA,eAAe,GAAG;AAChB,SAAKU,iBAAL;AACD;;AAEDA,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAE5B,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAyB,KAAKF,KAApC;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEI,KAAK8B,YAAL,CAAkB,OAAlB,EAA2B,QAA3B,EAAqC,aAArC,EAAoD7B,KAApD,CAFJ,CADF,eAKE;AAAO,MAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEI,KAAK6B,YAAL,CAAkB,aAAlB,EAAiC,MAAjC,EAAyC,mBAAzC,EAA8D5B,WAA9D,CAFJ,CALF,eASE;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAEE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,EAAE,EAAC,UAFL;AAGE,qBAAY,iBAHd;AAIE,MAAA,QAAQ,EAAG,KAAK6B,YAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMI,KAAKC,aAAL,EANJ,CAFF,CATF,eAoBE;AAAO,MAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAEI,KAAKC,YAAL,CAAkBC,UAAlB,EAA8B,QAA9B,EAAwC,cAAxC,EAAwD,KAAKH,YAA7D,CAFJ,CApBF,eAwBE;AAAO,MAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAEI,KAAKE,YAAL,CAAkBE,OAAlB,EAA2B,KAA3B,EAAkC,WAAlC,EAA+C,KAAKJ,YAApD,CAFJ,CAxBF,eA4BE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBA5BF,CADF,CADF;AAoCD;;AAEDK,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBATF,CADF,EAYI,KAAKjC,eAAL,EAZJ,CADF,CADF;AAkBD;;AA9H0C;;AAiI7C,MAAMkC,eAAe,GAAIrC,KAAD,KAAY;AAClCI,EAAAA,UAAU,EAAEJ,KAAK,CAACsC,MAAN,CAAajC,QADS;AAElCiC,EAAAA,MAAM,EAAEtC,KAAK,CAACsC;AAFoB,CAAZ,CAAxB;;AAKA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCjB,EAAAA,wBAAwB,EAAGlB,QAAD,IAAcmC,QAAQ,CAAC7C,cAAc,CAACU,QAAD,CAAf;AADR,CAAf,CAA3B;;AAIA,eAAeZ,OAAO,CAAC4C,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C3C,cAA7C,CAAf;AAEAA,cAAc,CAAC6C,SAAf,GAA2B;AACzBrC,EAAAA,UAAU,EAAEV,SAAS,CAACgD,KADG;AAEzBC,EAAAA,kBAAkB,EAAEjD,SAAS,CAACkD;AAFL,EAGzBC,UAHF","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { updateExpenses } from '../actions';\n\nclass ExpenseAddForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0,\n      description: '',\n    };\n  }\n\n  createrExpenses() {\n    const { stateProps } = this.props;\n    const expenses = stateProps;\n\n    if (expenses !== undefined) {\n      return expenses\n        .map(({ id, value, description, currency, method, tag, exchangeRates }) => {\n          const { name, ask } = exchangeRates[currency];\n          const total = value * Number(ask);\n          return (\n            <tr key={ id } id={ id }>\n              <td name={ description }>{ description }</td>\n              <td name={ tag }>{ tag }</td>\n              <td name={ method }>{ method }</td>\n              <td name={ Number(ask).toFixed(2) }>\n                { `${Number(ask).toFixed(2)}` }\n              </td>\n              <td name={ name.split('/')[0] }>{ name.split('/')[0] }</td>\n              <td name={ value }>{ value }</td>\n              <td>{ `${total.toFixed(2)}` }</td>\n              <td>Real</td>\n              <td>\n                <button\n                  id={ id }\n                  type=\"button\"\n                  data-testid=\"edit-btn\"\n                  onClick={ this.handleClickEdit.bind(this) }\n                >\n                  Editar\n                </button>\n              </td>\n              <td>\n                <button\n                  id={ id }\n                  type=\"button\"\n                  data-testid=\"delete-btn\"\n                  onClick={ this.handleClickDelete.bind(this) }\n                >\n                  Exluir\n                </button>\n              </td>\n            </tr>\n          );\n        });\n    }\n  }\n\n  handleClickDelete({ target: { id } }) {\n    const { stateProps, expensesUpdateDispatched } = this.props;\n    const ids = Number(id);\n    const newExpenses = stateProps.map((e) => e).filter((expense) => expense.id !== ids);\n    expensesUpdateDispatched(newExpenses);\n  }\n\n  handleClickEdit() {\n    this.handleEditExpense();\n  }\n\n  handleEditExpense() {\n    const { value, description } = this.state;\n    return (\n      <div>\n        <form>\n          <label htmlFor=\"value\">\n            Valor:\n            { this.createInputs('value', 'number', 'value-input', value) }\n          </label>\n          <label htmlFor=\"description\">\n            Descrição:\n            { this.createInputs('description', 'text', 'description-input', description) }\n          </label>\n          <label htmlFor=\"currency\">\n            Moeda:\n            <select\n              name=\"currency\"\n              id=\"currency\"\n              data-testid=\" currency-input\"\n              onChange={ this.handleChange }\n            >\n              { this.createOptions() }\n            </select>\n          </label>\n          <label htmlFor=\"method\">\n            Método de pagamento:\n            { this.createSelect(methodList, 'method', 'method-input', this.handleChange) }\n          </label>\n          <label htmlFor=\"tag\">\n            Tag:\n            { this.createSelect(tagList, 'tag', 'tag-input', this.handleChange) }\n          </label>\n          <button type=\"button\">\n            Editar despesa\n          </button>\n        </form>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <table>\n          <tr>\n            <th>Descrição</th>\n            <th>Tag</th>\n            <th>Método de pagamento</th>\n            <th>Valor</th>\n            <th>Moeda</th>\n            <th>Câmbio utilizado</th>\n            <th>Valor convertido</th>\n            <th>Moeda de conversão</th>\n            <th>Editar/Excluir</th>\n          </tr>\n          { this.createrExpenses() }\n        </table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  stateProps: state.wallet.expenses,\n  wallet: state.wallet,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  expensesUpdateDispatched: (expenses) => dispatch(updateExpenses(expenses)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenseAddForm);\n\nExpenseAddForm.propTypes = {\n  stateProps: PropTypes.array,\n  expensesDispatched: PropTypes.func,\n}.isRequired;\n"]},"metadata":{},"sourceType":"module"}