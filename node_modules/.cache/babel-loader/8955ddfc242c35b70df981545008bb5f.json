{"ast":null,"code":"var _jsxFileName = \"/home/santiago/Trybe/myprojects/sd-09-project-trybewallet/src/pages/Login.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router';\nimport { user } from '../actions';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      users: [{\n        user: 'admin@admin.com',\n        pass: '123456'\n      }],\n      isDisabled: true\n    };\n  }\n\n  handleChange({\n    target\n  }) {\n    const {\n      name,\n      value\n    } = target;\n    this.setState({\n      [name]: value\n    }, () => this.validateUser());\n  }\n\n  validateUser() {\n    const {\n      users,\n      email,\n      password\n    } = this.state;\n\n    if (users.some(user => user.user === email && user.pass === password)) {\n      this.setState({\n        isDisabled: false\n      });\n    }\n  }\n\n  handleClick() {\n    const {\n      emailDispatcher\n    } = this.props;\n    const {\n      email\n    } = this.state;\n  }\n\n  render() {\n    const {\n      email,\n      password,\n      isDisabled\n    } = this.state;\n    if (!isDisabled) return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/carteira\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 29\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, \"Email\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      value: email,\n      placeholder: \"Email\",\n      \"data-testid\": \"email-input\",\n      onChange: this.handleChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, \"Password\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      placeholder: \"Password\",\n      \"data-testid\": \"password-input\",\n      onChange: this.handleChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      disabled: isDisabled,\n      onClick: this.handleClick.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, \"ENTRAR\"));\n  }\n\n}\n\nconst mapDispatchToProps = dispach => ({\n  emailDispatcher: email => dispach(user(email))\n});\n\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/santiago/Trybe/myprojects/sd-09-project-trybewallet/src/pages/Login.js"],"names":["React","Redirect","user","Login","Component","constructor","props","state","email","password","users","pass","isDisabled","handleChange","target","name","value","setState","validateUser","some","handleClick","emailDispatcher","render","bind","mapDispatchToProps","dispach","connect"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Redirect } from 'react-router';\nimport { user } from '../actions';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      users: [{ user: 'admin@admin.com', pass: '123456' }],\n      isDisabled: true,\n    };\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({ [name]: value }, () => this.validateUser());\n  }\n\n  validateUser() {\n    const { users, email, password } = this.state;\n    if (users.some((user) => (user.user === email && user.pass === password))) {\n      this.setState({ isDisabled: false });\n    }\n  }\n\n  handleClick() {\n    const { emailDispatcher } = this.props;\n    const { email } = this.state;\n  }\n\n  render() {\n    const { email, password, isDisabled } = this.state;\n    if (!isDisabled) return <Redirect to=\"/carteira\" />;\n    return (\n      <form>\n        <label htmlFor=\"email\">\n          Email\n          <input\n            type=\"text\"\n            name=\"email\"\n            value={ email }\n            placeholder=\"Email\"\n            data-testid=\"email-input\"\n            onChange={ this.handleChange.bind(this) }\n          />\n        </label>\n        <label htmlFor=\"password\">\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={ password }\n            placeholder=\"Password\"\n            data-testid=\"password-input\"\n            onChange={ this.handleChange.bind(this) }\n          />\n        </label>\n        <button\n          type=\"button\"\n          disabled={ isDisabled }\n          onClick={ this.handleClick.bind(this) }\n        >\n          ENTRAR\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispach) => ({\n  emailDispatcher: (email) => dispach(user(email)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}